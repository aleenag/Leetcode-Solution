/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {

        if(head ==null) return true;  

        ListNode slow = head;
        ListNode fast = head;

        while(fast.next != null && fast.next.next != null){
         fast = fast.next.next;
         slow = slow.next;
        }

        ListNode FirstHalfHead = head;
        ListNode SecondHalfHead  = reverse(slow.next);

        while(FirstHalfHead!=null && SecondHalfHead!=null){
          if(FirstHalfHead.val != SecondHalfHead.val){
              return false;
          }
        FirstHalfHead = FirstHalfHead.next;
        SecondHalfHead = SecondHalfHead.next;
        
        }
        return true;
        
    }
